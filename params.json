{
  "name": "Ollu-cybersaints-lab-documentation",
  "tagline": "",
  "body": "#Lab Hardware / Layout\r\n2 Unmanaged trednet gigabit switches  \r\n2 Poweredge T300 Server\r\n```\r\n1 Intel Core 2 Duo E6305 @ 1.86GHz\r\n24GB Ram\r\n4 250GB HDD's > Raid 0\r\n```\r\n1 Poweredge T605 Server\r\n```\r\n2 Quad-Core AMD Opteron 2350\r\n32GB Ram\r\n4 250GB HDD's > Raid 0\r\n```\r\n#####Lab Hardware / Layout Image\r\n![](http://i.imgur.com/r58CGZy.png)\r\n#Lab Software / Layout\r\nEach Poweredge server is running ESX 6.0  \r\nA virtual Vcenter Server Appliance is running on the T605  \r\nA virtual Debian DHCP/Apache2 server is running DNSMASQ  \r\nThe rest of the VM's are VM's from www.Vulnhub.com  \r\n___\r\n#Configuration detials\r\nEach ESX host has 3 scripts running on it:  \r\n    Revert_Snapshots.sh, Create_Snapshots.sh, Script.sh  \r\n    All 3 are stored in the /root directory of the ESX host.  \r\nThe DHCP/Apache2 server has 2 scripts on it:  \r\n    IP_TO_MAC.sh and Order.sh  \r\n    Both are stored in the /root directory of the VM.  \r\n___\r\n\r\n#Scripts\r\n##ESX\r\nRevert_Snapshots.sh\r\n```\r\n#Get all vmid's where not the vcenter or the DHCP server\r\nVMIDS=$(vim-cmd vmsvc/getallvms | grep -v 01_Vcenter | grep -v 02_DNS_DHCP | awk '{print $1 }' | grep -v Vmid)\r\n#loop though VMID's and check if there is a snapshot by the name of fresh install. If so, revert the vm to that snapshot and then power on the VM\r\nfor VMID in $VMIDS\r\ndo\r\n        case $VMID in\r\n                ''|*[!0-9]*);;\r\n                *)\r\n                vim-cmd vmsvc/get.snapshot $VMID | grep \"Fresh Install\" > /dev/null\r\n                if [ $? -eq 0 ]; then\r\n                        echo $(vim-cmd vmsvc/get.summary $VMID | grep name)\r\n                        SnapShotID=$(vim-cmd vmsvc/snapshot.get $VMID | grep \"Fresh Install\" -A 1 | grep \"Id\" | awk '{print $4}')\r\n                        vim-cmd vmsvc/snapshot.revert $VMID $SnapShotID 0 > /dev/null\r\n                        vim-cmd vmsvc/power.on $VMID\r\n                fi\r\n                ;;\r\n        esac\r\ndone\r\n```\r\nCreate_Snapshots.sh\r\n```\r\n#Get all vmid's where not the vcenter or the DHCP server\r\nVMIDS=$(vim-cmd vmsvc/getallvms | grep -v 01_Vcenter | grep -v 02_DNS_DHCP | awk '{print $1 }' | grep -v Vmid)\r\n#loop though VMID's and check if there is a snapshot by the name of fresh install. If not, take a snapshot called fresh install.\r\nfor VMID in $VMIDS\r\ndo\r\n        case $VMID in\r\n                ''|*[!0-9]*);;\r\n                *)\r\n                vim-cmd vmsvc/get.snapshot $VMID | grep \"Fresh Install\" > /dev/null\r\n                if [ ! $? -eq 0 ]; then\r\n                        vim-cmd vmsvc/snapshot.create $VMID \"Fresh Install\"\r\n                fi\r\n                ;;\r\n        esac\r\ndone\r\n```\r\nScript.sh\r\n```\r\n#Get all vmid's\r\nVMIDS=$(vim-cmd vmsvc/getallvms | awk '{print $1 }' | grep -v Vmid)\r\necho \"\" > MAC_ADDRESSES\r\n#loop though VMID's and get the mac address and name of the vm. Add them to a file.\r\nfor VMID in $VMIDS\r\ndo\r\n        case $VMID in\r\n                ''|*[!0-9]*);;\r\n                *)\r\n                MacAddress=$(vim-cmd vmsvc/device.getdevices $VMID | grep macAddress | sed 's/macAddress = \"//' | sed 's/\",//' | sed -r 's/\\s+//g')\r\n                VmName=$(vim-cmd vmsvc/get.summary $VMID | grep name | sed 's/name = \"//' | sed 's/\",//' | sed -r 's/\\s+//g')\r\n                echo $MacAddress        $VmName >> MAC_ADDRESSES\r\n                ;;\r\n        esac\r\ndone\r\n```\r\ncrontab (/var/spool/cron/crontabs/root)\r\n```\r\n#Run every 5 minutes\r\n*/5 * * * * /root/script.sh\r\n#Run every Saturday at 5am\r\n* 5 * * 6/root/Create_Snapshots.sh\r\n#Run every Sunday at 5am\r\n* 5 * * 7/root/Revert_Snapshots.sh\r\n```\r\nAfter configuring crontab you should run the following commands to restart crontab\r\n```\r\nkill $(cat /var/run/crond.pid)\r\n/usr/lib/vmware/busybox/bin/busybox crond\r\n```\r\n##DHCP/Apache2\r\nIP_TO_MAC.sh\r\n```\r\n#This script creates the HTML page to show the IP addresses and VMnames\r\n#make sure file is empty\r\necho \"\" > /root/iptomac\r\n#add the title html to file\r\necho \"<title>CyberSaints Vurnable IP's</title>\" >> /root/iptomac\r\n#add the text to file\r\necho \"<i>This webpage is updated every minute. If there are any issues, check the /root/order.log file. The scripts that create this page are in /root</i><br><br>\" >> /root/iptomac\r\necho \"If you are trying to pentest one of these IP's and are struggling, try a walkthough at www.vulnhub.com\" >> /root/iptomac\r\n#Add table start to file\r\necho \"<table>\" >> /root/iptomac\r\n#Add table headers to file\r\necho \"<tr><th>VMname</th><th>Ipaddress</th></tr>\" >> /root/iptomac\r\n#loop through the DHCP file, compare the macs to the files in MAC. If they match, add a new row to the html file of IP/VMname\r\nwhile read line; do\r\n    MAC=$(echo $line | awk '{print $1}')\r\n    if grep -Rq $MAC /root/MAC\r\n    then\r\n        echo \"<tr><td>\" >> /root/iptomac\r\n        echo $(grep -R $MAC /root/MAC | awk '{print $2}' >> /root/iptomac\r\n        echo \"</td><td>\" >> /root/iptomac\r\n        echo $line | awk '{print $2}') >> /root/iptomac\r\n        echo \"</td></tr>\" >> /root/iptomac\r\n    fi\r\ndone </root/DHCP\r\necho \"</table>\" >>/root/iptomac\r\n#Copy the file to the index.html file to be displayed to website\r\ncp /root/iptomac /var/www/html/index.html\r\n```\r\nOrder.sh\r\n```\r\n#Gets all of the IP's and Mac addresses that have been leased\r\ncat /var/lib/misc/dnsmasq.leases | awk '{print $2 \" \" $3}' > /root/DHCP\r\n#obtains the Mac addresses from ESX4\r\nscp root@192.168.1.10:/MAC_ADDRESSES /root/MAC_ESX4\r\n#obtains the Mac addresses from ESX3\r\nscp root@192.168.1.9:/MAC_ADDRESSES /root/MAC_ESX3\r\n#obtains the Mac addresses from ESX2\r\nscp root@192.168.1.8:/MAC_ADDRESSES /root/MAC_ESX2\r\n#Combines all of the individual Mac Address files into one\r\ncat /root/MAC_ESX* > /root/MAC\r\n#Runs the IP_TO_MAC script\r\n/root/IP_TO_MAC.sh\r\n```\r\nIn order for the scp to work via crontab I did some sshkey-gen stuff that I will add later.\r\ncrontab\r\n```\r\n#Runs every minute\r\n*/1 * * * * /root/order.sh >> /root/order.log\r\n```\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}